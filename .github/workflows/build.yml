name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install WiX Toolset
      run: dotnet tool install --global wix
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build application
      run: .\build.ps1 -Configuration Release
      shell: pwsh
      
    - name: Test executable
      run: .\dist\installer.exe --vers
      shell: pwsh
      
    - name: Build MSI
      run: .\build\build-msi.ps1 -Configuration Release -Version "1.0.${{ github.run_number }}"
      shell: pwsh
      
    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: sbin-installer-exe
        path: dist/installer.exe
        
    - name: Upload MSI artifact
      uses: actions/upload-artifact@v4
      with:
        name: sbin-installer-msi
        path: dist/*.msi
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/installer.exe
          dist/*.msi
        body: |
          ## sbin-installer Release
          
          ### Installation Options
          
          **Executable (Portable)**
          - Download `installer.exe` 
          - Place in your PATH or run directly
          - No installation required
          
          **MSI Installer (Recommended)**
          - Download and run the `.msi` file
          - Installs to `C:\Program Files\sbin\`
          - Automatically adds to system PATH
          - Includes uninstaller
          
          ### Usage
          ```
          installer --pkg package.pkg --target /
          installer --pkginfo --pkg package.pkg
          installer --help
          ```
          
          ### What's Changed
          - Automatic build from commit ${{ github.sha }}
          - Built with .NET ${{ env.DOTNET_VERSION }}
          - Supports Windows x64, ARM64, and x86
          
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Separate job for signed builds (requires certificate secrets)
  build-signed:
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    runs-on: windows-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install WiX Toolset
      run: dotnet tool install --global wix
      
    - name: Import code signing certificate
      if: env.CERTIFICATE_BASE64 != ''
      run: |
        $cert = [System.Convert]::FromBase64String($env:CERTIFICATE_BASE64)
        Set-Content -Path "cert.p12" -Value $cert -AsByteStream
        $password = ConvertTo-SecureString $env:CERTIFICATE_PASSWORD -AsPlainText -Force
        $cert = Import-PfxCertificate -FilePath "cert.p12" -CertStoreLocation Cert:\CurrentUser\My -Password $password
        Write-Output "CERT_THUMBPRINT=$($cert.Thumbprint)" >> $env:GITHUB_ENV
      shell: pwsh
      env:
        CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        
    - name: Build signed application
      if: env.CERT_THUMBPRINT != ''
      run: .\build.ps1 -Configuration Release -CertificateThumbprint $env:CERT_THUMBPRINT
      shell: pwsh
      
    - name: Build signed MSI
      if: env.CERT_THUMBPRINT != ''
      run: .\build\build-msi.ps1 -Configuration Release -Version "1.0.${{ github.run_number }}" -CertificateThumbprint $env:CERT_THUMBPRINT
      shell: pwsh
      
    - name: Upload signed artifacts
      if: env.CERT_THUMBPRINT != ''
      uses: actions/upload-artifact@v4
      with:
        name: sbin-installer-signed
        path: |
          dist/installer.exe
          dist/*.msi